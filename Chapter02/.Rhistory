X = rexp(N) * (2*rbinom(N, 1, 0.5) - 1)
abs(-3)
N = 10000
supp = seq(-6, 6, 0.001)
f = dnorm
g = function(x) { exp(-abs(x))/2 }
M = sqrt(2 * exp(1) / pi)
X = rexp(N) * (2*rbinom(N, 1, 0.5) - 1)
U = runif(N)
Y = M * U * g(X)
AcceptX = X[Y <= f(X)]
RejectX = X[Y > f(X)]
rate = length(AcceptX) / N
AcceptY = Y[Y <= f(X)]
RejectY = Y[Y > f(X)]
par(mfrow=c(1, 1))
plot(RejectX, RejectY, xlab="", ylab="", pch=20, cex=0.5, col="gray")
points(AcceptX, AcceptY, pch=20, cex=0.5)
lines(supp, g(supp) / rate, col="orange", lwd=2)
lines(supp, f(supp), col="red", lwd=2)
legend("topright", legend=c("g(x)", "f(x)"), col=c("orange", "red"), lty=c(1, 1))
supp = seq(-10, 10, 0.001)
lines(supp, g(supp) / rate, col="orange", lwd=2)
lines(supp, f(supp), col="red", lwd=2)
N = 2500
supp = seq(-10, 10, 0.001)
f = dnorm
g = function(x) { 1 / (pi * (1 + x^2)) }
f = dnorm
g = function(x) { 1 / (pi * (1 + x^2)) }
M = 2 / sqrt(exp(1))
X = rcauchy(N)
U = runif(N)
Y = M * U * g(X)
AcceptX = X[Y <= f(X)]
RejectX = X[Y > f(X)]
rate = length(AcceptX) / N
c = rate * M
AcceptY = Y[Y <= f(X)]
RejectY = Y[Y > f(X)]
f = dnorm
g = function(x) { 1 / (pi * (1 + x^2)) }
M = 2 / sqrt(exp(1))
X = rcauchy(N)
U = runif(N)
Y = M * U * g(X)
AcceptX = X[Y <= f(X)]
RejectX = X[Y > f(X)]
rate = length(AcceptX) / N
c = rate * M
AcceptY = Y[Y <= f(X)]
RejectY = Y[Y > f(X)]
lines(supp, g(supp), col="orange", lwd=2)
lines(supp, f(supp), col="red", lwd=2)
par(mfrow=c(1, 1))
plot(RejectX, RejectY, xlab="", ylab="", pch=20, cex=0.5, col="gray")
points(AcceptX, AcceptY, pch=20, cex=0.5)
lines(supp, g(supp), col="orange", lwd=2)
lines(supp, f(supp), col="red", lwd=2)
plot(RejectX, RejectY, xlab="", ylab="", pch=20, cex=0.5, col="gray")
points(AcceptX, AcceptY, pch=20, cex=0.5)
lines(supp, g(supp), col="orange", lwd=2)
plot(RejectX, RejectY, xlab="", ylab="", pch=20, cex=0.5, col="gray")
points(AcceptX, AcceptY, pch=20, cex=0.5)
lines(supp, g(supp) / rate, col="orange", lwd=2)
lines(supp, f(supp), col="red", lwd=2)
legend("topright", legend=c("g(x)", "f(x)"), col=c("orange", "red"), lty=c(1, 1))
RejectX = X[Y > f(X)]
rate = length(AcceptX) / N
c = rate * M
AcceptY = Y[Y <= f(X)]
RejectY = Y[Y > f(X)]
plot(RejectX, RejectY, xlab="", ylab="", pch=20, cex=0.5, col="gray")
points(AcceptX, AcceptY, pch=20, cex=0.5)
N = 500
supp = seq(-5, 5, 0.001)
f = dnorm
g = function(x) { 1 / (pi * (1 + x^2)) }
M = 2 / sqrt(exp(1))
X = rcauchy(N)
U = runif(N)
Y = M * U * g(X)
AcceptX = X[Y <= f(X)]
RejectX = X[Y > f(X)]
rate = length(AcceptX) / N
c = rate * M
AcceptY = Y[Y <= f(X)]
RejectY = Y[Y > f(X)]
plot(RejectX, RejectY, xlab="", ylab="", pch=20, cex=0.5, col="gray")
points(AcceptX, AcceptY, pch=20, cex=0.5)
lines(supp, g(supp) / rate, col="orange", lwd=2)
lines(supp, f(supp), col="red", lwd=2)
dcauchy(3)
g(3)
f = dnorm
g = dcauchy
## 2.2
### (a)
f = dlogis
## 2.2
### (a)
N = 10000
pnorm(0)
F
## 2.2
### (a)
N = 10000
U = randu(N)
Finv = function(x) { -log((1-x)/x) }
X = Finv(U)
## 2.2
### (a)
N = 10000
U = randu(N)
U = runif(N)
Finv = function(x) { -log((1-x)/x) }
X = Finv(U)
hist(X)
hist(X, freq=FALSE)
hist(X, freq=FALSE, breaks=seq(-10, 10, 0.5))
U = runif(N)
f = dlogis
Finv = function(x) { -log((1-x)/x) }
X = Finv(U)
hist(X, freq=FALSE, breaks=seq(-10, 10, 0.5))
X = Finv(U)
hist(X, freq=FALSE, breaks=seq(-15, 15, 0.5))
lines(supp, f(supp), col="red")
## 2.2
### (a)
supp = seq(-15, 15, 0.01)
lines(supp, f(supp), col="red")
lines(supp, f(supp), col="red", lwd=2)
par(mfrow=c(1,2))
hist(X, freq=FALSE, breaks=seq(-15, 15, 0.5))
lines(supp, f(supp), col="red", lwd=2)
## 2.2
### (a)
supp = seq(-12, 12, 0.01)
N = 10000
U = runif(N)
f = dlogis
Finv = function(x) { -log((1-x)/x) }
X = Finv(U)
par(mfrow=c(1,2))
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5))
lines(supp, f(supp), col="red", lwd=2)
par(mfrow=c(1,2))
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5))
lines(supp, f(supp), col="red", lwd=2)
hist(Y, freq=FALSE, breaks=seq(-12, 12, 0.5))
lines(supp, f(supp), col="red", lwd=2)
Y = rlogis(N)
hist(Y, freq=FALSE, breaks=seq(-12, 12, 0.5))
Y = rlogis(N)
hist(Y, freq=FALSE, breaks=seq(-12, 12, 0.5))
lines(supp, f(supp), col="red", lwd=2)
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5), title="Logistic from Uniform")
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Logistic from Uniform")
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Logistic from Uniform")
lines(supp, f(supp), col="red", lwd=2)
hist(Y, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Logistic from R")
lines(supp, f(supp), col="red", lwd=2)
### (b)
supp = seq(-12, 12, 0.01)
N = 10000
U = runif(N)
f = dcauchy
Finv = function(x) { tan(pi * (x - 1/2)) }
X = Finv(U)
Y = rcauchy(N)
par(mfrow=c(1,2))
par(mfrow=c(1,2))
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from Uniform")
lines(supp, f(supp), col="red", lwd=2)
hist(Y, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from R")
lines(supp, f(supp), col="red", lwd=2)
par(mfrow=c(1,2))
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from Uniform")
lines(supp, f(supp), col="red", lwd=2)
hist(Y, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from R")
lines(supp, f(supp), col="red", lwd=2)
lines(supp, f(supp), col="red", lwd=2)
lines(supp, f(supp), col="red", lwd=2)
lines(supp, f(supp), col="red", lwd=2)
hist(Y, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from R")
lines(supp, f(supp), col="red", lwd=2)
lines(supp, f(supp), col="red", lwd=2)
lines(supp, f(supp), col="red", lwd=2)
hist(X, freq=FALSE,  main="Cauchy from Uniform")
X = Finv(U)
Y = rcauchy(N)
par(mfrow=c(1,2))
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from Uniform")
hist(X, freq=FALSE,  main="Cauchy from Uniform")
X = Finv(U)
Y = rcauchy(N)
par(mfrow=c(1,2))
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from Uniform")
hist(X, freq=FALSE,  main="Cauchy from Uniform")
hist(X, freq=FALSE,  main="Cauchy from Uniform")
Finv = function(x) { tan(pi * (x - 1/2)) }
X = Finv(U)
Y = rcauchy(N)
par(mfrow=c(1,2))
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from Uniform")
hist(X, freq=FALSE,  main="Cauchy from Uniform")
lines(supp, f(supp), col="red", lwd=2)
hist(Y, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from R")
U = runif(N)
f = dcauchy
Finv = function(x) { tan(pi * (x - 1/2)) }
X = Finv(U)
Y = rcauchy(N)
par(mfrow=c(1,2))
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from Uniform")
hist(X, freq=FALSE,  main="Cauchy from Uniform")
lines(supp, f(supp), col="red", lwd=2)
hist(Y, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from R")
hist(Y, freq=FALSE,  main="Cauchy from R")
hist(Y, freq=FALSE,  main="Cauchy from R")
hist(Y, freq=FALSE,  main="Cauchy from R")
Y = rcauchy(N)
hist(Y, freq=FALSE,  main="Cauchy from R")
X = Finv(U); X = X[-3 < X & X < 3]
hist(X, freq=FALSE,  main="Cauchy from Uniform")
X = Finv(U); X = X[-10 < X & X < 10]
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from Uniform")
lines(supp, f(supp), col="red", lwd=2)
X = Finv(U); X = X[-12 < X & X < 12]
Y = rcauchy(N); Y = Y[-12 < Y & Y < 12]
par(mfrow=c(1,2))
hist(X, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from Uniform")
lines(supp, f(supp), col="red", lwd=2)
hist(Y, freq=FALSE, breaks=seq(-12, 12, 0.5), main="Cauchy from R")
lines(supp, f(supp), col="red", lwd=2)
Y = rlogis(N); Y = Y[-12 < Y < 12]
Sigma = cov(matrix(rnorm(30, nrow=10)))
Sigma = cov(matrix(rnorm(30), nrow=10)))
Sigma = cov(matrix(rnorm(30), nrow=10))
Sigma
rnorm(30)
matrix(rnorm(30), nrow=10)
chol(Sigma)
A = t(chol(Sigma))
Sigma
A %*% t(A)
t(A) %*% A
rgamma(10, 5, 3)
rgamma(10, 5, 1/3)
## 2.12
### (a)
N = 10^4
X = rexp(N)
X
max(X)
?apply
X = matrix(runif(3*10), nrow=3)
X
apply(X, 2, sum)
apply(X, 1, sum)
## 2.12
### (a)
a = 3
b = 5
N = a*10^4
U = matrix(runif(N), nrow=a)
X = apply(-log(U), 2, sum)
X
## 2.12
### (a)
a = 3
b = 5
N = 10^4
U = matrix(runif(a * N), nrow=a)
X = b * apply(-log(U), 2, sum)
rgamma(N)
rgamma(N, 3, 5)
rgamma(N, 3, 1/5)
X
par(mfrow=c(1,2))
hist(X)
hist(X, freq=F)
hist(X, freq=F)
hist(rgamma(N, 3, 1/5), freq=F)
hist(rgamma(N, 3, scale=5), freq=F)
function test1() {
U = matrix(runif(a * N), nrow=a)
X = b * apply(-log(U), 2, sum)
}
function() test1 {
U = matrix(runif(a * N), nrow=a)
X = b * apply(-log(U), 2, sum)
}
function() test1 {
U = matrix(runif(a * N), nrow=a);
X = b * apply(-log(U), 2, sum);
}
function() test1 {
U = matrix(runif(a * N), nrow=a)
X = b * apply(-log(U), 2, sum)
X
}
test1 = function() {
U = matrix(runif(a * N), nrow=a)
X = b * apply(-log(U), 2, sum)
}
test2 = function() {
X = rgamma(N, a, scale=b)
}
system.time(test1()); system.time(test2())
U = matrix(runif((a+b)*N, nrow=a+b)
)
U = matrix(runif((a+b)*N, nrow= a+b))
U = matrix(runif((a+b)*N, nrow = a+b))
U = matrix(runif((a+b)*N, nrow=(a+b)))
U = matrix(runif((a+b)*N), nrow=a+b)
U
U = matrix(runif((a+b)*10), nrow=a+b)
U
U[:3,]
U[1:3,]
apply(U[1:3,], 2, sum)
apply(U[1:3,], 2, sum) / apply(U, 2, sum)
apply(U, 2, sum)
test1()
s = test1()
s
test1 = function(N, a, b) {
U = matrix(runif(a * N), nrow=a)
X = b * apply(-log(U), 2, sum)
}
test2 = function(N, a, b) {
X = rgamma(N, a, scale=b)
}
system.time(test1(N, a, b)); system.time(test2(N, a, b))
test1 = function(N, a, b) {
U = matrix(runif((a+b) * N), nrow=a+b)
X = -log(U)
X = apply(X[1:a,], 2, sum) / apply(X, 2, sum)
}
test2 = function(N, a, b) {
rbeta(N, a, b)
}
system.time(test1(N, a, b)); system.time(test2(N, a, b))
hist(test1())
hist(test1(N, a, b))
hist(test1(N, a, b))
hist(test2(N, a, b))
hist(test1(N, a, b), freq=F)
hist(test2(N, a, b), freq=F)
hist(test1(N, a, b), freq=F)
hist(test2(N, a, 1/b), freq=F)
hist(U)
## 2.3
### (b)
N = 12
U = runif(N)
hist(U)
U = runif(N) - 0.5
Z = sum(U)
## 2.3
### (b)
N = 10000
U = matrix(runif(12 * N), nrow=12)
Z = apply(U, 2, sum)
hist(Z)
hist(Z, freq=FALSE)
hist(rnorm(N), freq=FALSE)
hist(rnorm(N), freq=FALSE)
X1 = sqrt(-2 * log(U1)) * cos(2 * pi * U2)
U1 = runif(N)
U2 = runif(N)
X1 = sqrt(-2 * log(U1)) * cos(2 * pi * U2)
hist(X1, freq=FALSE)
X1 = sqrt(-2 * log(U1)) * cos(2 * pi * U2)
hist(X1, freq=FALSE)
U1 = runif(N)
U2 = runif(N)
X1 = sqrt(-2 * log(U1)) * cos(2 * pi * U2)
hist(X1, freq=FALSE)
U1 = runif(N)
U2 = runif(N)
X1 = sqrt(-2 * log(U1)) * cos(2 * pi * U2)
hist(X1, freq=FALSE)
hist(rnorm(N), freq=FALSE)
Sigma = cov(matrix(rnorm(30), nrow=10))
class(Z)
class(U)
typeof(U)
par(mfrow=c(1, 2))
hist(Z, freq=FALSE, breaks=seq(-6, 6, 0.1))
U = matrix(runif(12 * N), nrow=12)
Z = apply(U, 2, sum)
hist(Z, freq=FALSE, breaks=seq(-6, 6, 0.1))
## 2.3
### (b)
N = 10000
U = matrix(runif(12 * N), nrow=12)
Z = apply(U, 2, sum)
U1 = runif(N)
U2 = runif(N)
X1 = sqrt(-2 * log(U1)) * cos(2 * pi * U2)
par(mfrow=c(1, 2))
hist(Z, freq=FALSE, breaks=seq(-6, 6, 0.1))
## 2.3
### (b)
N = 10000
U = matrix(runif(12 * N), nrow=12)
Z = apply(U, 2, sum)
U1 = runif(N)
U2 = runif(N)
X1 = sqrt(-2 * log(U1)) * cos(2 * pi * U2)
par(mfrow=c(1, 2))
hist(Z, freq=FALSE, breaks=seq(-7, 7, 0.1))
max(Z)
## 2.3
### (b)
N = 10000
U = matrix(runif(12 * N), nrow=12) - 0.5
Z = apply(U, 2, sum)
U1 = runif(N)
U2 = runif(N)
X1 = sqrt(-2 * log(U1)) * cos(2 * pi * U2)
par(mfrow=c(1, 2))
hist(Z, freq=FALSE, breaks=seq(-7, 7, 0.1))
hist(Z, freq=FALSE, breaks=seq(-6, 6, 0.1))
hist(Z, freq=FALSE, breaks=seq(-4, 4, 0.1))
hist(Z, freq=FALSE, breaks=seq(-4, 4, 0.2))
hist(Z, freq=FALSE, breaks=seq(-6, 6, 0.2))
hist(X1, freq=FALSE, breaks=seq(-6, 6, 0.2))
hist(Z, freq=FALSE, breaks=seq(-6, 6, 0.2), main="CLT-normal generator")
hist(X1, freq=FALSE, breaks=seq(-6, 6, 0.2), main="Box-Muller algorithm")
par(mfrow=c(1, 2))
hist(test1(N), freq=FALSE, breaks=seq(-6, 6, 0.2), main="CLT-normal generator")
hist(test2(N), freq=FALSE, breaks=seq(-6, 6, 0.2), main="Box-Muller algorithm")
## 2.3
### (b)
N = 10000
test1 = function(N) {
U = matrix(runif(12 * N), nrow=12) - 0.5
Z = apply(U, 2, sum)
}
test2 = function(N) {
U1 = runif(N)
U2 = runif(N)
X1 = sqrt(-2 * log(U1)) * cos(2 * pi * U2)
}
par(mfrow=c(1, 2))
hist(test1(N), freq=FALSE, breaks=seq(-6, 6, 0.2), main="CLT-normal generator")
hist(test2(N), freq=FALSE, breaks=seq(-6, 6, 0.2), main="Box-Muller algorithm")
system.time(test1()); system.time(test2())
system.time(test1(N)); system.time(test2(N))
system.time(test3(N))
### (c)
test3 = function(N) {
rnorm(N)
}
system.time(test3(N))
## 2.4
Sigma = cov(matrix(rnorm(30), nrow=10))
Sigma
A = chol(Sigma)
A %*% t(A)
t(A) %*% A
A = t(chol(Sigma))
rmnorm
mnormt
library(mnormt)
install.packages("mnormt")
library(mnormt)
A
c
s
s = rnorm(3)
s
A
A %*% s
A %*% c(1, 0, 0)
A %*% c(0, 1, 0)
rmnorm(3)
rmnorm(3, varcov=Sigma)
rmnorm(5, varcov=Sigma)
system.time(test1(N)); system.time(test2(N))
## 2.4
### (c)
N = 100
Sigma = cov(matrix(rnorm(30), nrow=10))
test1 = function(N) {
A = t(chol(Sigma))
X = matrix(runif(3 * N), nrow=N)
X = X %*% A
}
test2 = function(N) {
library(mnormt)
rmnorm(N, varcov=Sigma)
}
system.time(test1(N)); system.time(test2(N))
## 2.4
### (c)
N = 10000
Sigma = cov(matrix(rnorm(30), nrow=10))
test1 = function(N) {
A = t(chol(Sigma))
X = matrix(runif(3 * N), nrow=N)
X = X %*% A
}
test2 = function(N) {
library(mnormt)
rmnorm(N, varcov=Sigma)
}
system.time(test1(N)); system.time(test2(N))
